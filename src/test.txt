import src::test2 (Nat, abo)
import src::testmodule

func nat(Nat) -> Nat
    = x -> test2::Nat::Succ(x)

func foo(A) -> B
    = x -> B::foo(x)

func bar(testmodule::testfile::TestFileType) -> testmodule::testfile::TestFileType
    = x -> testmodule::testfile::TestFileType::TestFileType()

func super(testmodule::innermodule::innerfile::InnerType) -> testmodule::innermodule::innerfile::InnerType
    = x -> abo(x)

type A = foo(B)
type B = foo(A)

func main() -> Nat = x ->
    let test2::Nat::Zero(): Nat
        = merhaba -> merhaba
        | a       -> a

func test() -> Nat = x ->
    let test2::Nat::Zero()
        = test2::Nat::Succ(test2::Nat::Succ(m)) -> m
        | zero                                  -> zero

func add(Nat, Nat) -> Nat
    = n, test2::Nat::Zero() -> n
    | n, A::foo(m)          -> test2::Nat::Succ(add(n, m))

